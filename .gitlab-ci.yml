stages:
  - docs-check
  - lint
  - build
  - test

# lint the README using Markdownlint
lint-the-readme:
  stage: docs-check
  allow_failure: True
  image: ruby:2.5.3-alpine3.8
  script:
    - gem install mdl
    - mdl --version
    - mdl README.md

# check the links in the README
check-the-links:
  stage: docs-check
  allow_failure: True
  image: golang:latest
  script:
    - go version
    - go get -v -u github.com/raviqqe/liche
    - liche README.md -v

# Lint the shellfile using Shellcheck
lint-the-scripts:
  stage: lint
  image: koalaman/shellcheck-alpine:stable
  script:
    - shellcheck --version
    - shellcheck get-docker-compose-latest-version.sh

# Lint the Dockerfile using Hadolint
lint-the-dockerfile:
  stage: lint
  image: hadolint/hadolint:latest-debian
  script:
    - hadolint --version
    - >
      hadolint
      --ignore DL3018
      Dockerfile

# Build and push to Dockerhub
build-and-push-the-thing:
  stage: build
  image: docker:latest
  services:
    - name: docker:dind
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD"
  script:
    - docker build --pull --tag "$CI_REGISTRY_IMAGE" .
    - docker push "$CI_REGISTRY_IMAGE"

# Pull and run
run-and-test-the-thing:
  stage: test
  image: docker:latest
  services:
    - name: docker:dind
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD"
  script:
    - docker pull "$CI_REGISTRY_IMAGE"
    - docker run "$CI_REGISTRY_IMAGE"
