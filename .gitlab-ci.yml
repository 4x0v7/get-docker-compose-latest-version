# Use Docker-in-Docker service
image: docker:git
services:
  - name: docker:dind

variables:
  DOCKER_COMPOSE_VERSION: 1.20.1

stages:
  - pre-lint-checks
  - readme-lint
  - shell-lint
  - docker-lint
  - build

# Run our pre-lint checks
pre-lint-docker:
  stage: pre-lint-checks
  script:
    - docker pull hadolint/hadolint
    - docker run hadolint/hadolint hadolint --version
    - >
      docker run -i
      hadolint/hadolint hadolint
      - < linkchecker-Dockerfile

pre-lint-docker-compose:
  stage: pre-lint-checks
  script:
    - docker version
    - docker pull docker/compose:$DOCKER_COMPOSE_VERSION
    - docker run docker/compose:$DOCKER_COMPOSE_VERSION version
    - >
      docker run -i
      docker/compose:$DOCKER_COMPOSE_VERSION
      --file - < linkchecker-docker-compose
      config

# lint the README using Markdownlint
lint-the-readme:
  stage: readme-lint
  allow_failure: True
  script:
    - docker pull mivok/markdownlint
    - docker run mivok/markdownlint --version
    - >
      docker run -i
      mivok/markdownlint
      --rules ~MD013
      - < README.md

# check the links in the README
check-the-links:
  stage: readme-lint
  allow_failure: False
  script:
    - docker build --tag linkchecker -f linkchecker-Dockerfile .
    - docker run -v "$PWD":/app linkchecker README.md

# Lint the shellfile using Shellcheck
shellscript-lint:
  stage: shell-lint
  script:
    - docker pull koalaman/shellcheck
    - docker run koalaman/shellcheck --version
    - >
      docker run -i
      koalaman/shellcheck
      - < get-docker-compose-latest-version.sh

# Lint the Dockerfile using Hadolint
dockerfile-lint:
  stage: docker-lint
  script:
    - docker pull hadolint/hadolint
    - docker run hadolint/hadolint hadolint --version
    - >
      docker run -i
      hadolint/hadolint hadolint
      - < Dockerfile

# Build and push to Dockerhub
build-the-thing:
  stage: build
  script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
    - docker build --pull -t "$CI_REGISTRY_IMAGE" .
    - docker push "$CI_REGISTRY_IMAGE"
